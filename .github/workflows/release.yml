name: release

on:
  release:
    types:
      - published

jobs:
  package:
    name: package and upload release assets
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     os:
    #       - linux
    #       - darwin
    #       - windows
    #     arch:
    #       - amd64
    #       - arm
    #     exclude:
    #       - os: darwin
    #         arch: arm

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: setup-go 1.14
        uses: actions/setup-go@v1
        with:
          go-version: 1.14
      - name: package
        run: ./scripts/package.sh
      - name: vars
        id: vars
        env:
          SHA_EXT: sha256sum.txt
        run: |
          tag=$(echo ${{ github.ref }} | rev | cut -d/ -f1 | rev)
          filename=$(find . -type f \( -iname nebula-console\* \) -exec basename {} \;)
          sha256sum $filename > $filename.$SHA_EXT
          echo "::set-output name=tag::$tag"
          echo "::set-output name=filepath::$filename"
          echo "::set-output name=shafilepath::$filename.$SHA_EXT"
      - name: upload release asset
        run: |
          ./scripts/upload-github-release-asset.sh \
            github_token=${{ secrets.GITHUB_TOKEN }} \
            repo=${{ github.repository }} \
            tag=${{ steps.vars.outputs.tag }} \
            filepath=${{ steps.vars.outputs.filepath }}
          ./scripts/upload-github-release-asset.sh \
            github_token=${{ secrets.GITHUB_TOKEN }} \
            repo=${{ github.repository }} \
            tag=${{ steps.vars.outputs.tag }} \
            filepath=${{ steps.vars.outputs.shafilepath }}

  docker:
    name: build docker images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Build and push Docker images
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ secrets.DOCKER_USERNAME }}/nebula-console
          tags: latest
          tag_with_ref: true
          add_git_labels: true
